
services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: express-app-container-typingGame
    ports:
      - "3000:3000"
    volumes:
      - ./server:/app # Mount ./server directory to /app in container
      - /app/node_modules # Prevent overwriting node_modules inside container
    environment:
      - NODE_ENV=development
    restart: unless-stopped

  app:
    build:
      context: ./typingGame
      dockerfile: Dockerfile
    container_name: typingGame-Vite
    ports:
      - "5173:5173"
    volumes:
      - ./typingGame:/app # Mount ./typing_app directory to /app in container
      - /app/node_modules # Prevent overwriting node_modules inside container
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    
  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    volumes:
      - ./mongodb/initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb-data:/data/db/
      - mongodb-log:/var/log/mongodb/
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    networks:
      - mongodb_network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: 'mongodb'
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    ports:
      - 8081:8081
    networks:
      - mongodb_network
    depends_on:
      - mongodb

volumes:
  mongodb-data:
    driver: local
    name: mongo-data
  mongodb-log:
    driver: local
    name: mongo-log

networks:
  mongodb_network:
    driver: bridge
    name: mongo-network

  